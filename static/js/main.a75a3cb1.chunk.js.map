{"version":3,"sources":["Componentes/Navbar.js","Componentes/Panel.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","class","type","Panel","useState","estaturaInput","setEstaturaInput","pesoInput","setPesoInput","onSubmit","e","imc","preventDefault","alert","toFixed","value","onChange","currentTarget","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAgBeA,EAhBA,WACX,OACI,8BACI,qBAAKC,MAAM,8CAAX,SACI,sBAAKA,MAAM,8BAAX,UACI,mBAAGA,MAAM,eAAT,6BACA,wBAAQA,MAAM,iBAAiBC,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAxL,SACI,sBAAMD,MAAM,kC,cCmErBE,EAxED,WAAO,IAAD,IAEhB,EAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA6BA,OACI,8BAEI,qBAAKP,MAAM,YAAX,SAEI,sBAAKA,MAAM,OAAX,UACI,qBAAKA,MAAM,sBAAX,qFAGA,qBAAKA,MAAM,YAAX,SACI,uBAAMQ,SA5BT,SAACC,GACd,IAAMC,EAAOJ,GAAcF,EAAgB,KAAQA,EAAgB,MACnEK,EAAEE,iBACCD,GAAO,MACNE,MAAMF,EAAIG,UAAY,0CACtBR,EAAiB,IACjBE,EAAa,KACRG,EAAM,MAAQA,EAAM,IACzBE,MAAMF,EAAIG,UAAY,8BACtBR,EAAiB,IACjBE,EAAa,KACRG,EAAM,KACXE,MAAMF,EAAIG,UAAY,0CACtBR,EAAiB,IACjBE,EAAa,MAcD,UACI,sBAAKP,MAAM,YAAX,UACA,oBAAIA,MAAM,aAAV,sBACA,mBAAGA,MAAM,YAAT,+BACA,0BAAOA,MAAM,oBAAoBc,MAAOV,EAAeH,KAAK,SAASc,SAxCtE,SAACN,GACpBJ,EAAiBI,EAAEO,cAAcF,SAuCb,qBAAoG,UAApG,4BAAyH,YAAzH,2BAA+I,UAA/I,OAGA,sBAAKd,MAAM,YAAX,UACA,oBAAIA,MAAM,kBAAV,kBACA,mBAAGA,MAAM,YAAT,2BACA,0BAAOA,MAAM,oBAAoBc,MAAOR,EAAWL,KAAK,SAASc,SA1CtE,SAACN,GAChBF,EAAaE,EAAEO,cAAcF,SAyCT,qBAA4F,UAA5F,4BAAiH,YAAjH,2BAAuI,UAAvI,OAKA,qBAAKd,MAAM,kBAAX,SACI,wBAAQA,MAAM,4CAA4CC,KAAK,SAA/D,qCC5CjBgB,EAXF,WAEX,OACE,gCACE,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a75a3cb1.chunk.js","sourcesContent":["const Navbar = () => {\n    return (\n        <div>\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <div class=\"container-fluid text-center\">\n                    <a class=\"navbar-brand\" >Calculadora IMC</a>\n                    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span class=\"navbar-toggler-icon\"></span>\n                    </button>\n                   \n                </div>\n            </nav>\n\n        </div>\n    );\n}\nexport default Navbar;","import React,{useState} from 'react'\n\nconst Panel = () => {\n\n    const [estaturaInput, setEstaturaInput] = useState('');\n    const [pesoInput, setPesoInput] = useState('');\n\n\n    const cambioEstatura = (e) => {\n        setEstaturaInput(e.currentTarget.value)\n    }\n\n    const cambioPeso = (e) => {\n        setPesoInput(e.currentTarget.value)\n    }\n\n    const calcular = (e) => {\n        const imc = (pesoInput / ((estaturaInput / 100) * (estaturaInput / 100)));\n        e.preventDefault();\n        if(imc <= 18.5){\n            alert(imc.toFixed() + \" de indice IMC\\nimc inferior al normal\")\n            setEstaturaInput(\"\");\n            setPesoInput(\"\");\n        }else if(imc > 18.5 && imc < 25){\n            alert(imc.toFixed() + \" de indice IMC\\nimc normal\")\n            setEstaturaInput(\"\");\n            setPesoInput(\"\");\n        }else if(imc > 25){\n            alert(imc.toFixed() + \" de indice IMC\\nimc superior al normal\")\n            setEstaturaInput(\"\");\n            setPesoInput(\"\");\n        }\n    }\n\n    return (\n        <div>\n\n            <div class=\"container\">\n\n                <div class=\"card\">\n                    <div class=\"card-header bg-info\">\n                        Para calcular su índice de masa corporal, ingrese su estatura y peso\n                    </div>\n                    <div class=\"card-body\">\n                        <form onSubmit={calcular}>\n                            <div class=\"container\">\n                            <h5 class=\"card-title\">Estatura</h5>\n                            <p class=\"card-text\">En centímetros</p>\n                            <input class=\"form-control me-2\" value={estaturaInput} type=\"number\" onChange={cambioEstatura} type=\"search\" placeholder=\"Estatura\" aria-label=\"Search\" />\n\n                            </div>\n                            <div class=\"container\">\n                            <h5 class=\"card-title pt-5\">Peso</h5>\n                            <p class=\"card-text\">En kilogramos</p>\n                            <input class=\"form-control me-2\" value={pesoInput} type=\"number\" onChange={cambioPeso} type=\"search\" placeholder=\"Peso    \" aria-label=\"Search\" />\n\n                            </div>   \n\n\n                            <div class=\"container-fluid\">\n                                <button class=\"btn btn-outline-info mt-5 container-fluid\" type=\"submit\">Calcular</button>\n\n                            </div>\n\n\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\nexport default Panel;","\nimport './App.css';\nimport Nabvar from './Componentes/Navbar';\nimport Panel from './Componentes/Panel'\n\nconst App  = () => {\n  \n  return (\n    <div>\n      <Nabvar />\n      <br />  \n      <Panel />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}